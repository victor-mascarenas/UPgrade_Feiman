- Hello, welcome, my name is Victor and I am going to show you how to create tables in HTML.

a) What is a table?

1. What is a table.

- Lest's start with the basics, what is a table? Well, we all have seen a table before, a table is an element used for displaing data in the form of rows and columns (different table examples are shown).

2. Table examples from the web.

- In HTML, we can create our own tables to display data. (diferent HTML table examples are shown)
- On this example we see a simple HTML table, it has rows and columns containing the data, and a header which indicates the data element that each column holds.

b) Correct use.

- Now, before we go ahead, we need to talk about the correct use of tables in HTML, it may look pretty straight forward but tables are often misused in HTML.

1. Correct use of tables (tabular data).

- As tables are defined, HTML tables are supposed to be used to display data, tabular data to be precise...

2. What is tabular data.

- And what is tabular data? well, it is essentially data wich can be shown in a table.
- So, let's say we have 3 fruits: mango, pineapple and kiwi (fruits are shown in a text manner), in order to present this data, we could use a table (fruits are shown in a table), but, is it really necessary? it depends on what you are doing, but probably it isn't, we could just use a list (fruits are shown in a list).
- In the other hand, if we had a bigger piece of data like this JSON file (a JSON file is shown) wich contains customers information, maybe a table would be useful.

3. Incorrect use of tables (layout).

- So that is the correct use of tables in HTML, but whats is the incorrect way? well, let's say I have to create a web page that need's to be portrayed in a "3 column way" (a page like this is shown) and I use a table for it (an X is shown over the example), that is an example of an incorrect use, tables are not supposed to be used for layout purposes, just for tabular data.
- For this previous example (the example is shown again), in order to achieve a 3 column page, you should use a layout in CSS like the grid layout.
- Always remember, using a table for layout is not a good practice.

[Code editor section]

- Before we go jump into some code, let me show you what you need and what I'm gonna be using for coding during the video.
- First thing you need is a code editor, if you don't know what that is don't worry I'll explain: you can understand a code editor as an app which allows you to create code files like some programing languages and of course HTML pages.
- My personal choise is Visual Studio Code, if you have a bit more experience and you have your own choise feel free to use it.
- So, if you are following me, just go to 'code.visualstudio.com', click on download and follow the installer's instructions.
- Also, something else you will se is that I'm not reloading the page after each change I make, that's because I'm using an extension. If you go to the left side you are going to find 5 sections, explorer, search, source control, run & debug, and extensions, if you are following me just look for live... server, this one right here, it's already installed for me, you click on it, then you click on install and thats it.

[]

c) Table tags.

- Ok, now we can go for creating a table.

[Creating folder]

- Create a folder on your desktop and then open it in VS Code.

[]

- First of all let's create a simple web page (a web page is created).
- Now that we have our page we can go ahead.

1. Table tag.

- What do we need to create a table? we need the table tag (the tag is shown in a text manner), which represents the main container of the table, let's do it (table tag is added).

2. Row tag.

- Next, we need to add some rows to it, for that we have the TR and TD tags (tags are shown in a text manner), which stands for table row and table data.

3. Data tag.

- The TD tag can be translated to table cells or columns if you want to.
- Let's add our first row (row is added), there we go, but nothing is getting displayed in the page, so now we need to add some TD tags.
- If the TR tag stands for a row, each TD tag we add inside will mean a column (TD tags are added into TR).
- Now we can see that the 4 customers we add as TD's inside our row are showing as 4 separate columns (the page is shown).
- But right now our table only has 1 row, let's add more, if we copy the TR and paste it 4 times below (copies the row), we end up having 5 rows (page is shown).
- So, we have a couple of rows but someting is mising, we need a header.

4. Header.

- In order to add a header, we need to add another row right after the table tag, before the other rows (adds a row).

4.1. Heading tag.

- But for it to be a header, we are going to use the TH tag insead of the TD (changes the tag).
- And now we can see that our new row appears with bold text, because the TH tag defines a cell as a header.

d) Table attributes.

- There are a couple of attributes we can add to a table (HTML is shown with the attributes)...

1. Deprecated attributes.

- But actually this attributes are now deprecated...

2. Style for layout (recomendation).

- Because you should use css styling instead.
- Besides this attributes, there are others you can use like 'scope' (attribute shown as text).

3. Scopes.

- The 'scope' attribute is related to headers, in our example (page is shown) we have our headers on top, but we can also add headers to the side (example is shown), and for this we can add some scoped headers.
- If we go to the table's header, I can add the 'scope' attribute to each TH tag and set it as 'column' (adds sttribute).
- So, in order to create some side headers I'm going to add a TH tag inside each row (does it).
- But this time I'm setting the scope attribute as 'row' (doest it).
- And there we go, you can see now we have some side headers in our table.
- But there is something I want to show yo, I'm going to remove the 'scope' attribute from all TH tag (does it), you can see that nothing changes in our page, it still the same, why? Well, the 'scope' tag doesn't precisely reflects on the page, it's more used as an accesibility resource, for example, it can be used by screen readers, so you see, setting the 'scope' attribute for the headers is actually a good practice.

e) Semantic tags.

- Ok, now it's time to talk about semantic tags.

1. What & why?

- When HTML 5 arrived it came with something called semantic tags, wich are ment to add a better content organization to both developers and web browsers, and it came with 3 semantic tags for tables: thead, tbody and tfoot.

2. Head tag.

- The thead tag stands for the header part of the table, so I'm adding a thead tag right after the tbale tag, and now I'm coping the first row with our columns headers and pasting it inside our thead tag. Now we have defined the header part of our table.

3. Body tag.

- Just as the thead, the tbody tag is meant to define the body of the table, so, I'm adding a tbody tag after the thead, and pasting the rest of the rows inside it.

4. Footer tag.

- At the end, we can also add a tfoot tag in order to define the footer of our table, let's add it at the end.
- Sometimes it could be not necesary, but let's say you have a large table and you want to repeat the column names at the end, so I'm adding a row inside the tfoot tag.
- And there we go, we have defined the table's content. Don't forget as I said before, this tags are only menat for structuring and content organization.

f) Captions.

- There is another tag we can include inside the table, which is the 'caption' tag.

1. What for?

- You can take the caption tag as a name or description for the table, so, I'm adding the tag before anything else inside the table.

2. Caption tag.

- And now our table is shown with a text on top.
- It's also a good practice to place the caption tag as the first one in the table.

g) Table span's.

- What if you want to expand a table cell to another row o column? Well, you can use the 'rowspan' and 'colspan attributes'.

1. Column span.

- Let's say I want this cell to expand to the next column, so let's add the 'colspan' attribute and set it as 2 (comment), which means that the cell will be using 2 column spaces beggining on it's current position.
- Now you can see the cell is using 2 spaces.

2. Row span.

- And the same happens for rows, if we need to expand a cell to the next row, we have to add the 'rowspan' attribute and set it also as 2 (comment).
- That's how we span cells along the table.

h) Grouping.

- So, there is one last thing I want to cover, and it is called grouping.

1. What for?

- Grouping allow us to create some column groups, so insead of applying some properties to each column, we can assign them to the group.

2. Colgroup & col tags.

- Let's see, I added a colgroup tag after the caption tag, by the way thats the recommended order for the tags. Inside the colgroup you can see I added 5 'col' tags, which represents each column in the table.
- I have prepared some style for this example, I'm goning to add a class 'blue' to each col, you can see that the background of each column has turned to blue, but now I want to set a different color for the columns, so, I'm adding a class 'red' to the last 3 col's, you can see I'm leaving only 2 col tags instead of 5, and I'm adding another attribute called 'span', setting it to 2 for the first col and 3 for the second one, now the columns are shown with different background colors.
- You can also separate the red and blue columns into 2 separated groups and it will work just fine.

- And with this we just finished HTML tables, feel free to ask any questions and thanks for your time, see you next time.